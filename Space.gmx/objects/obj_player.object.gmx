<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables
dmg = 0
dmg_max = 32

x_spd = 0
y_spd = 0
acel = .5
max_spd = 5
reload = 10
reload_time = 0
scrap_amnt = 0

dmg_bar = instance_create(x, y, obj_player_dmg)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Controls
self.image_angle = point_direction(self.x, self.y, mouse_x, mouse_y) - 90

uk = keyboard_check(ord("W")) or keyboard_check(vk_up)
lk = keyboard_check(ord("A")) or keyboard_check(vk_left)
dk = keyboard_check(ord("S")) or keyboard_check(vk_down)
rk = keyboard_check(ord("D")) or keyboard_check(vk_right)

y_chk = dk - uk
x_chk = rk - lk

x_spd += x_chk * acel
y_spd += y_chk * acel

if x_spd &gt;  max_spd {x_spd =  max_spd}
if x_spd &lt; -max_spd {x_spd = -max_spd}
if y_spd &gt;  max_spd {y_spd =  max_spd}
if y_spd &lt; -max_spd {y_spd = -max_spd}

self.x += x_spd
self.y += y_spd

fire_main = mouse_check_button(mb_left)

spread = 1

if (fire_main and reload_time == 0) {
    bullet = instance_create(self.x, self.y, obj_blt)
    bullet.speed = 25
    bullet.direction = point_direction(self.x, self.y, mouse_x, mouse_y) + random_range(-spread, spread)
    bullet.image_angle = bullet.direction - 90
    bullet.target = "enemy"
    reload_time = reload
}
if reload_time &gt; 0 {
    reload_time -= 1
}

//Move HP Bar
dmg_bar.x = x
dmg_bar.y = y
dmg_bar.image_angle = image_angle   
if dmg &lt; dmg_max {
    dmg_bar.image_index = dmg
}
else {
    dmg_bar.image_index = -1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug Text
draw_self()

draw_set_color(c_white)

p_str = string(self.x) + ", " + string(self.y)
player_position = draw_text(self.x - 32, self.y - 32, p_str)

m_str = string(mouse_x) + ", " + string(mouse_y)
mouse_position = draw_text(mouse_x, mouse_y - 32, m_str)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
